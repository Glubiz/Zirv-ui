use yew::{classes, Classes};

#[derive(Debug, Clone, Copy, PartialEq, Eq, Default)]
pub enum BackgroundColor {
    None,
    Primary,
    PrimaryDark,
    PrimaryLight,
    Secondary,
    SecondaryDark,
    SecondaryLight,
    Tertiary,
    TertiaryDark,
    TertiaryLight,
    Container,
    ContainerDark,
    ContainerLight,
    #[default]
    Background,
    BackgroundDark,
    BackgroundLight,
    TextPrimary,
    TextPrimaryDark,
    TextPrimaryLight,
    TextSecondary,
    TextSecondaryDark,
    TextSecondaryLight,
    Success,
    SuccessDark,
    SuccessLight,
    Warning,
    WarningDark,
    WarningLight,
    Error,
    ErrorDark,
    ErrorLight,
}

impl From<&BackgroundColor> for Classes {
    fn from(background_color: &BackgroundColor) -> Self {
        match background_color {
            BackgroundColor::None => classes!("background-color-none"),
            BackgroundColor::Primary => classes!("background-color-primary"),
            BackgroundColor::PrimaryDark => classes!("background-color-primary-dark"),
            BackgroundColor::PrimaryLight => classes!("background-color-primary-light"),
            BackgroundColor::Secondary => classes!("background-color-secondary"),
            BackgroundColor::SecondaryDark => classes!("background-color-secondary-dark"),
            BackgroundColor::SecondaryLight => classes!("background-color-secondary-light"),
            BackgroundColor::Tertiary => classes!("background-color-tertiary"),
            BackgroundColor::TertiaryDark => classes!("background-color-tertiary-dark"),
            BackgroundColor::TertiaryLight => classes!("background-color-tertiary-light"),
            BackgroundColor::Container => classes!("background-color-container"),
            BackgroundColor::ContainerDark => classes!("background-color-container-dark"),
            BackgroundColor::ContainerLight => classes!("background-color-container-light"),
            BackgroundColor::Background => classes!("background-color-background"),
            BackgroundColor::BackgroundDark => classes!("background-color-background-dark"),
            BackgroundColor::BackgroundLight => classes!("background-color-background-light"),
            BackgroundColor::TextPrimary => classes!("background-color-text-primary"),
            BackgroundColor::TextPrimaryDark => classes!("background-color-text-primary-dark"),
            BackgroundColor::TextPrimaryLight => classes!("background-color-text-primary-light"),
            BackgroundColor::TextSecondary => classes!("background-color-text-secondary"),
            BackgroundColor::TextSecondaryDark => classes!("background-color-text-secondary-dark"),
            BackgroundColor::TextSecondaryLight => classes!("background-color-text-secondary-light"),
            BackgroundColor::Success => classes!("background-color-success"),
            BackgroundColor::SuccessDark => classes!("background-color-success-dark"),
            BackgroundColor::SuccessLight => classes!("background-color-success-light"),
            BackgroundColor::Warning => classes!("background-color-warning"),
            BackgroundColor::WarningDark => classes!("background-color-warning-dark"),
            BackgroundColor::WarningLight => classes!("background-color-warning-light"),
            BackgroundColor::Error => classes!("background-color-error"),
            BackgroundColor::ErrorDark => classes!("background-color-error-dark"),
            BackgroundColor::ErrorLight => classes!("background-color-error-light"),
        }
    }
}