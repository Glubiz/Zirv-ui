name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal

    - name: Cache Rust dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install clippy
      run: rustup component add clippy

    - name: Lint with clippy
      run: cargo clippy --all-features -- -D warnings

    - name: Run tests
      run: cargo test --all-features

  format-and-compile:
    runs-on: ubuntu-latest
    needs: test-and-lint

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_PAT }}

    - name: Set up Nightly Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        profile: minimal

    - name: Install rustfmt
      run: rustup component add rustfmt --toolchain nightly

    - name: Format code with rustfmt
      run: cargo +nightly fmt --all

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    - name: Compile SCSS
      run: npm run compile-scss

    - name: Commit and push changes
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add .
        git commit -m "Format code with rustfmt and compile SCSS" || echo "No changes to commit"
        git push origin main || echo "No changes to push"
